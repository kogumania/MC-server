name: Build and Release
on:
  push:
    tags:
      - 'v*' # v1.0.0, v1.0.1 などのタグがプッシュされた時に実行

permissions:
  contents: write # リリース作成とファイルアップロードに必要
  
jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Dependencies
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi
        shell: bash
        
      # CHANGELOG.mdを作成（リリースノート用）
      - name: Create CHANGELOG.md
        run: |
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## [${{ github.ref_name }}] - $(date '+%Y-%m-%d')" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### Added" >> CHANGELOG.md
          echo "- New features and improvements" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### Fixed" >> CHANGELOG.md
          echo "- Bug fixes" >> CHANGELOG.md
        shell: bash
        
      - name: Build Application (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build Application (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build Application (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # デバッグ情報: distフォルダの内容を確認
      - name: List dist folder contents
        run: |
          echo "Contents of dist folder:"
          ls -la dist/ || echo "dist folder not found"
          echo "Looking for YAML files:"
          find dist/ -name "*.yml" -o -name "*.yaml" 2>/dev/null || echo "No YAML files found"
        shell: bash
        
      - name: Upload Build Artifacts (All files)
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: |
            dist/*
            !dist/mac
            !dist/win-unpacked
            !dist/linux-unpacked
          if-no-files-found: warn
