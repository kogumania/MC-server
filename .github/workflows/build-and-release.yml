name: Build and Release

on:
  push:
    tags:
      - 'v*' # v1.0.0, v1.0.1 などのタグがプッシュされた時に実行

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Build Application (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build Application (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build Application (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Build Artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: dist/*.AppImage
          
      - name: Upload Build Artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/*.exe
          
      - name: Upload Build Artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: dist/*.dmg

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-artifacts
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist-artifacts/linux-build/*
            dist-artifacts/windows-build/*
            dist-artifacts/macos-build/*
          body: |
            ## 🎉 MC Server Creator ${{ github.ref_name }}
            
            ### 新機能・変更点
            - 自動更新機能を実装
            - Minecraftサーバー作成機能
            - クロスプラットフォーム対応
            
            ### ダウンロード
            - **Windows**: `*.exe` ファイル
            - **macOS**: `*.dmg` ファイル  
            - **Linux**: `*.AppImage` ファイル
            
            ### インストール方法
            1. お使いのOSに対応するファイルをダウンロード
            2. ダウンロードしたファイルを実行
            3. 以降は自動更新が有効になります
            
            ---
            **注意**: 初回インストール後は、アプリ内で自動的に新しいバージョンが通知されます。
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
